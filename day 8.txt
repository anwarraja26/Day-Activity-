## Form Handling

In this code if we type in one field it will change in the respective output also but the rest of the output become empty 

```jsx
import {useState} from 'react';
export default  function Parent(){
    const[data,setData]=useState({
        name:"",
        roll:"",
        gender:"",
        city:"",
        phone:""
    })
    return(
      <div>
        <form onSubmit={(formSubmit) => {
          formSubmit.preventDefault();
          console.log("success...");
         console.log(data);
        }}>
          <label>Enter your name: </label>
          <input type="text" name="name"onChange={(a) => { setData({  name: a.target.value }) }}></input><br/>

          <label>Enter your Roll No: </label>
          <input type="text" name="roll"onChange={(a) => { setData({ roll: a.target.value }) }}></input><br/>

          <label>Enter your Gender: </label>
          <input type="text" name="gender"onChange={(a) => { setData({  gender: a.target.value }) }}></input><br/>

          <label>Enter your City: </label>
          <input type="text" name="city"onChange={(a) => { setData({  city: a.target.value }) }}></input><br/>

          <label>Enter your Phone No: </label>
          <input type="text" name="phone"onChange={(a) => { setData({ phone: a.target.value }) }}></input><br/>

          <input type="submit" value="Submit"></input>
        
          <h1>Name is {data.name}</h1><br/>
          <h1>Roll No is {data.roll}</h1>
          <h1>Gender is {data.gender}</h1>
          <h1>City is {data.city}</h1>
          <h1>Phone No is {data.phone}</h1>
        </form>
      </div>
    )
}
```

To solve this problem we use the rest operator 

```jsx
import {useState} from 'react';
export default  function Parent(){
    const[data,setData]=useState({
        name:"",
        roll:"",
        gender:"",
        city:"",
        phone:""
    })
    return(
      <div>
        <form onSubmit={(formSubmit) => {
          formSubmit.preventDefault();
          console.log("success...");
         console.log(data);
        }}>
          <label>Enter your name: </label>
          <input type="text" name="name"onChange={(a) => { setData({  ...data,name: a.target.value }) }}></input><br/>

          <label>Enter your Roll No: </label>
          <input type="text" name="roll"onChange={(a) => { setData({ ...data,roll: a.target.value }) }}></input><br/>

          <label>Enter your Gender: </label>
          <input type="text" name="gender"onChange={(a) => { setData({ ...data, gender: a.target.value }) }}></input><br/>

          <label>Enter your City: </label>
          <input type="text" name="city"onChange={(a) => { setData({ ...data, city: a.target.value }) }}></input><br/>

          <label>Enter your Phone No: </label>
          <input type="text" name="phone"onChange={(a) => { setData({ ...data,phone: a.target.value }) }}></input><br/>

          <input type="submit" value="Submit"></input>
        
          <h1>Name is {data.name}</h1><br/>
          <h1>Roll No is {data.roll}</h1>
          <h1>Gender is {data.gender}</h1>
          <h1>City is {data.city}</h1>
          <h1>Phone No is {data.phone}</h1>
        </form>
      </div>
    )
}
```

preData

![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/1194d79f-5f07-406f-b7c3-8d26db89d64a/2f13c3ea-9f38-4969-b02b-74a658e84f6d/image.png)

How To reduce the complexity by creating the single function instead of creating the many functions 

```jsx
import {useState} from 'react';
export default  function Parent(){
    const[data,setData]=useState({
        name:"",
        roll:"",
        gender:"",
        city:"",
        phone:""
    })
    function updateData(d){
      var variable=d.target.name;
      var value=d.target.value;
      setData((data)=>{return {...data,[variable]:value}})
    }
    return(
      <div>
        <form onSubmit={(formSubmit) => {
          formSubmit.preventDefault();
          console.log("success...");
         console.log(data);
        }}>
          <label>Enter your name: </label>
          <input type="text" name="name"onChange={updateData}></input><br/>

          <label>Enter your Roll No: </label>
          <input type="text" name="roll"onChange={updateData}></input><br/>

          <label>Enter your Gender: </label>
          <input type="text" name="gender"onChange={updateData}></input><br/>

          <label>Enter your City: </label>
          <input type="text" name="city"onChange={updateData}></input><br/>

          <label>Enter your Phone No: </label>
          <input type="text" name="phone"onChange={updateData}></input><br/>

          <input type="submit" value="Submit"></input>
        
          <h1>Name is {data.name}</h1><br/>
          <h1>Roll No is {data.roll}</h1>
          <h1>Gender is {data.gender}</h1>
          <h1>City is {data.city}</h1>
          <h1>Phone No is {data.phone}</h1>
        </form>
      </div>
    )
}
```

# Routing

Without router how we do is like below but it will refresh in react we donâ€™t need to refresh to solve this we need router.

```jsx
import About from "./About";
import Home from "./Home";

function App(){

  return(
    <div>
        <ul>
          <li><a href="/">Home</a></li>
          <li><a href="/">About</a></li>
        </ul>
      </div>
      
  );
}
export default App;
```

Here is the code with router from the react-router-dom package 

We need the link it will check the routes of the to link if the path is found it will move to the path 

```jsx
import About from "./About";
import Home from "./Home";
import {BrowserRouter,Routes,Route,Link} from "react-router-dom";
function App(){
  return(
    <div>
      <BrowserRouter>
        <ul>
          <li><Link to="/">Home</Link></li>
          <li><Link to="/about">About</Link></li>

        </ul>
        <Routes>
          <Route path="/" element={<Home />}></Route>
          <Route path="/about" element={<About />}></Route>

        </Routes>
      </BrowserRouter>
     
    </div>
  );
}
export default App;
```

## How to sent the data through link ?

```jsx
import About from "./About";
import Home from "./Home";
import {BrowserRouter,Routes,Route,Link} from "react-router-dom";
function App(){
  return(
    <div>
      <BrowserRouter>
        <ul>
          <li><Link to="/">Home</Link></li>
          <li><Link to="/about/1">About</Link></li>
        </ul>
        <Routes>
          <Route path="/" element={<Home />}></Route>
          <Route path="/about/:id" element={<About />}></Route>
        </Routes>
      </BrowserRouter>
     
    </div>
  );
}
export default App;
```

### How to receive the data from link ?

```jsx
import {useParams} from 'react-router-dom';

export default function About(){
    const[id]=useParams();
    return(
        <div>
            <h1>About Page {id}</h1>
        </div>
    );
}
```

# Nested Routes

```jsx
import logo from './logo.svg';
import './App.css';
import Home from './Home';
import Contact from './Contact';
import About from './About';
import { BrowserRouter, Link, Route, Routes } from 'react-router-dom';
import User from './User';
import NewBook from './NewBook';
import OldBook from './OldBook';
function App() {
  return (
    <>
    
    <h1>welcome to the cls</h1>
    <BrowserRouter>
    <ul>
     <li><Link to="/">HOME</Link> </li>
     <li><Link to="/aboutus">ABOUT</Link> </li>
     <li><Link to="/contact-us">CONTACT</Link> </li> 
     <li><Link to="/user/10">USER 10</Link> </li> 
     <li><Link to="/user/13">USER 13</Link> </li> 
     <li><Link to="/user/134">USER 134</Link> </li> 
     <li><Link to="/book/new-book">NEW-BOOK</Link> </li>
     <li><Link to="/book/old-book">OLD-BOOK</Link> </li>
      
    </ul>
        <Routes>
          <Route path='/' element={<Home/>}></Route>
          <Route path='/aboutus' element={<About/>}></Route> 
          <Route path='/contact-us' element={<Contact/>}></Route>
          <Route path='/user/:id' element={<User/>}></Route>
          <Route path = "/book">
          <Route path='/new-book' element={<NewBook/>}></Route>
          <Route path='/old-book' element={<OldBook/>}></Route>
          </Route>
        </Routes>
    </BrowserRouter>

    </>
  )
}
export default App;
```